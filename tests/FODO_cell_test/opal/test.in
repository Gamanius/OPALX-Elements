OPTION, PSDUMPFREQ = 1;   // 6d data written every 300000 time steps (h5).
OPTION, STATDUMPFREQ = 1;  // Beam Stats written every 10 time steps (stat).
OPTION, BOUNDPDESTROYFQ=10; // Delete lost particles, if any
OPTION, AUTOPHASE=4;        // Autophase is on, and phase of max energy
                            // gain will be found automatically for cavities
Option, VERSION=10900;

Title, string="Solenoid-1 test";

//----------------------------------------------------------------------------
//Global Parameters

REAL rf_freq             = 1.3e3;     //RF frequency. (Hz)
REAL n_particles         = 10000;      //Number of particles in simulation.
REAL beam_bunch_charge   = 1e-09;      //Charge of bunch. (C)

//Initial Momentum Calculation
REAL Edes    = 1e-3;  // initial energy in GeV
REAL gamma   = (Edes+EMASS)/EMASS;
REAL beta    = sqrt(1-(1/gamma^2));
REAL P0      = gamma*beta*EMASS;    //inital z momentum

//Printing initial energy and momentum to terminal output.
value , {Edes, P0, OPALVERSION};

FOCUS_POLE_0  : MULTIPOLE, L=0.1, ELEMEDGE=0.000, KN={0, 0.1};
FIRST_DRIFT_0 : DRIFT    , L=0.3, ELEMEDGE=0.100;
DEFOCUS_POLE_0: MULTIPOLE, L=0.1, ELEMEDGE=0.400, KN={0, -0.1};
SECOND_DRIFT_0: DRIFT    , L=0.3, ELEMEDGE=0.500;

FOCUS_POLE_1  : MULTIPOLE, L=0.1, ELEMEDGE=0.800, KN={0, 0.1};
FIRST_DRIFT_1 : DRIFT    , L=0.3, ELEMEDGE=0.900;
DEFOCUS_POLE_1: MULTIPOLE, L=0.1, ELEMEDGE=1.200, KN={0, -0.1};
SECOND_DRIFT_1: DRIFT    , L=0.3, ELEMEDGE=1.300;

FOCUS_POLE_2  : MULTIPOLE, L=0.1, ELEMEDGE=1.600, KN={0, 0.1};
FIRST_DRIFT_2 : DRIFT    , L=0.3, ELEMEDGE=1.700;
DEFOCUS_POLE_2: MULTIPOLE, L=0.1, ELEMEDGE=2.000, KN={0, -0.1};
SECOND_DRIFT_2: DRIFT    , L=0.3, ELEMEDGE=2.100;

FOCUS_POLE_3  : MULTIPOLE, L=0.1, ELEMEDGE=2.400, KN={0, 0.1};
FIRST_DRIFT_3 : DRIFT    , L=0.3, ELEMEDGE=2.500;
DEFOCUS_POLE_3: MULTIPOLE, L=0.1, ELEMEDGE=2.800, KN={0, -0.1};
SECOND_DRIFT_3: DRIFT    , L=0.3, ELEMEDGE=2.900;

FOCUS_POLE_4  : MULTIPOLE, L=0.1, ELEMEDGE=3.200, KN={0, 0.1};
FIRST_DRIFT_4 : DRIFT    , L=0.3, ELEMEDGE=3.300;
DEFOCUS_POLE_4: MULTIPOLE, L=0.1, ELEMEDGE=3.600, KN={0, -0.1};
SECOND_DRIFT_4: DRIFT    , L=0.3, ELEMEDGE=3.700;

FOCUS_POLE_5  : MULTIPOLE, L=0.1, ELEMEDGE=4.000, KN={0, 0.1};
FIRST_DRIFT_5 : DRIFT    , L=0.3, ELEMEDGE=4.100;
DEFOCUS_POLE_5: MULTIPOLE, L=0.1, ELEMEDGE=4.400, KN={0, -0.1};
SECOND_DRIFT_5: DRIFT    , L=0.3, ELEMEDGE=4.500;

FOCUS_POLE_6  : MULTIPOLE, L=0.1, ELEMEDGE=4.800, KN={0, 0.1};
FIRST_DRIFT_6 : DRIFT    , L=0.3, ELEMEDGE=4.900;
DEFOCUS_POLE_6: MULTIPOLE, L=0.1, ELEMEDGE=5.200, KN={0, -0.1};
SECOND_DRIFT_6: DRIFT    , L=0.3, ELEMEDGE=5.300;

FOCUS_POLE_7  : MULTIPOLE, L=0.1, ELEMEDGE=5.600, KN={0, 0.1};
FIRST_DRIFT_7 : DRIFT    , L=0.3, ELEMEDGE=5.700;
DEFOCUS_POLE_7: MULTIPOLE, L=0.1, ELEMEDGE=6.000, KN={0, -0.1};
SECOND_DRIFT_7: DRIFT    , L=0.3, ELEMEDGE=6.100;

FOCUS_POLE_8  : MULTIPOLE, L=0.1, ELEMEDGE=6.400, KN={0, 0.1};
FIRST_DRIFT_8 : DRIFT    , L=0.3, ELEMEDGE=6.500;
DEFOCUS_POLE_8: MULTIPOLE, L=0.1, ELEMEDGE=6.800, KN={0, -0.1};
SECOND_DRIFT_8: DRIFT    , L=0.3, ELEMEDGE=6.900;

FOCUS_POLE_9  : MULTIPOLE, L=0.1, ELEMEDGE=7.200, KN={0, 0.1};
FIRST_DRIFT_9 : DRIFT    , L=0.3, ELEMEDGE=7.300;
DEFOCUS_POLE_9: MULTIPOLE, L=0.1, ELEMEDGE=7.600, KN={0, -0.1};
SECOND_DRIFT_9: DRIFT    , L=0.3, ELEMEDGE=7.700;

SOLine: Line = (FOCUS_POLE_0, FIRST_DRIFT_0, DEFOCUS_POLE_0, SECOND_DRIFT_0,
FOCUS_POLE_1, FIRST_DRIFT_1, DEFOCUS_POLE_1, SECOND_DRIFT_1,
FOCUS_POLE_2, FIRST_DRIFT_2, DEFOCUS_POLE_2, SECOND_DRIFT_2,
FOCUS_POLE_3, FIRST_DRIFT_3, DEFOCUS_POLE_3, SECOND_DRIFT_3,
FOCUS_POLE_4, FIRST_DRIFT_4, DEFOCUS_POLE_4, SECOND_DRIFT_4,
FOCUS_POLE_5, FIRST_DRIFT_5, DEFOCUS_POLE_5, SECOND_DRIFT_5,
FOCUS_POLE_6, FIRST_DRIFT_6, DEFOCUS_POLE_6, SECOND_DRIFT_6,
FOCUS_POLE_7, FIRST_DRIFT_7, DEFOCUS_POLE_7, SECOND_DRIFT_7,
FOCUS_POLE_8, FIRST_DRIFT_8, DEFOCUS_POLE_8, SECOND_DRIFT_8,
FOCUS_POLE_9, FIRST_DRIFT_9, DEFOCUS_POLE_9, SECOND_DRIFT_9
);

Dist: DISTRIBUTION, TYPE = GAUSS,
        SIGMAX = 0.001,
        SIGMAY = 0.001,
	SIGMAZ = 0.001;

//----------------------------------------------------------------------------
// Define Field solvers
// The mesh sizes should be a factor of 2
// for most efficient space charge calculation.

FS_SC: Fieldsolver, FSTYPE = NONE,
            MX = 16, MY = 16, MT = 16, // SC grid size is 32^3
            PARFFTX = false,
            PARFFTY = false,
            PARFFTT = true,  // parallel in the z direction only
            BCFFTX = open,
            BCFFTY = open,
            BCFFTT = open,
            BBOXINCR = 1,
            GREENSF = INTEGRATED;

//----------------------------------------------------------------------------
// Electron Beam Definition

BEAM1:  BEAM, PARTICLE = ELECTRON, pc = P0, NPART = n_particles,
        BFREQ = rf_freq, BCURRENT = beam_bunch_charge * rf_freq * 1e6, CHARGE = -1;

//----------------------------------------------------------------------------
// Simulate the beamline using TRACK and RUN.
// Note, different time steps are set based on the z location in the beam line.
// In the case below, 1.0e-13 is used for 0.0 to 0.4 m,
// and 3.0e-12 is used from 0.4 to 5 m.

TRACK, LINE = SOLine, BEAM = BEAM1, MAXSTEPS = 2836, DT = 1e-11;
RUN, METHOD = "PARALLEL-T", BEAM = BEAM1,
    FIELDSOLVER = FS_SC, DISTRIBUTION = Dist;
ENDTRACK;
Quit;
