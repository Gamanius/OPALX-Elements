			dcfdump
			-------

dcfdump is a "dump" utility for DiscField files.  It can print out to
the console the values of the data stored ina DiscField file.  It can
print out the entire file, or just a selected record, or just a
selected field from a selected record.  Records are numbered 0
... numrec-1, and fields are numbered 0 ... numfields-1.  You can also 
just print out a summary of the file contents, without printing the whole
field itself.  There is an option to display a graphical image of the
field using the IPPL ACLVIS run-time graphics option.

Currently, you cannot choose to print out a just subset of a field,
although this capability could be added in the future.

The command-line options used by dcfdump are:

	dcfdump -file <file> [options]

where [options] may be any of the following:
   -h or -?           : print this help info and quit.
   -conf <file>       : configuration file (if needed)
   -field <n>         : which field to print from file (0 to numfields-1)
   -record <n>        : which rec. to print from file (0 to numrecs-1)
   -dim <dim>         : dim of field (will be inferred if not given)
   -vec or -vector    : assume vector instead of scalar data
   -tens or -tensor   : assume tensor instead of scalar data
   -sym or -symtensor : assume symtensor instead of scalar data
   -anti or -antisymtensor: assume antisymtensor instead of scalar data
   -i or -int         : assume integer instead of double data
   -f or -flt         : assume float instead of double data
   -d or -dbl         : assume double for the data (default)
   -noprint           : just print a summary, not the actual field data

By default, dcfdump will assume the field data type is just 'double'.
If it is some other type, use the "-f" or "-i" options.  Also, if the
field is some other IPPL type like Vektor, Tenzor, etc., use the
"-vec", "-tens", etc. flags.  NOTE: The dimension of the Vektor or
Tenzor will be assumed to be the dimension of the total field.  There
is currently no way to specify anything else with dcfdump.

You should not ever have to use the "-dim <dim>" option anymore,
dcfdump will figure out the dimension properly.  You only have to
specify a "conf" file if it is needed.

For example, to print out the entire contents of a DiscField file
"myfile" (that is really myfile.data, myfile.meta, etc) that does
not have a config file, you just say

	dcfdump -file myfile

To just print out a summary of how many records and fields are in the
file, and what the size of the fields are, just say

	dcfdump -file myfile -noprint

If the file had several records and fields, and the type is
Vektor<float,Dim>, you can print out just one of them in this way:

	dcfdump -file myfile -record 2 -field 1 -f -vec


When computing differences and rmsd values, the following computations 
will be done for non-scalar data:

	Vektor: computes the dot-product of the differences of the
Vektors and just uses that, so the rmsd is actually the rmsd of the
square of the magnitudes of the Vektor differences.

	Tenzor (SymTenzor, AntiSymTenzor): computes the
dot-dot-product of Tenzors and just uses that, sothe rmsd is actually
the rmsd of the square ofthe magnitudes of the Tenzor differences.


dcfdump will return an error code upon completion that signals what
happened when it tried to read and dump the file contents.  The
possible error codes:

   0: OK, file printed successfully
   1: Error in reading or printing
   2: Error in command-line parameters
   3: Unsupported dimension or type

Use '--connect aclvis' to also visually display the data as it is read 
in, if you have compiled IPPL with this option.

Since dcfdump is a IPPL program, you can use the standard IPPL
command-line options to start this program running in parallel.