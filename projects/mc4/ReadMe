
===============
ReadMe for mc4, Andreas Adelmann March, 2008 Los Alamos
				 June, 2009 
===============

Prerequirements
---------------

You need to have IPPL installed and  H5Part.

LANL Coyote environment:

module load openmpi/1.1.2
module load subversion
setenv LD_LIBRARY_PATH /scratch3/adelmann/hdf5-1.6.5/hdf5/lib:/users/adelmann/install/hdf5-1.6.5/hdf5/lib$LD_LIBRARY_PATH
setenv FC mpif90
setenv CXX mpiCC
setenv IPPL_ROOT /users/adelmann/svnwork/ippl
setenv IPPL_ARCH LINUX
setenv HDF5ROOT /users/adelmann/install/hdf5-1.6.5/hdf5/lib 
 

Obtaining mc4
-------------

a) mc4 is at https://savannah.psi.ch/amas/amas/ippl/trunk/projects/mc4
in a subversion repository. Here a nice quick-reference http://www.cs.utexas.edu/users/field/svn_qref.html
and the full monty is at: subversion.tigris.org


b) On Coyote you can copy IPPL form ~adelmann/svnwork/ippl, mc4 is the under 
~adelmann/svnwork/ippl/projects/mc4


et IPPL_ROOT accordingly!


mc4 via. subversion
-------------------

$ svn checkout https://savannah.psi.ch/amas/amas/ippl/trunk/projects/mc4 mc4

Comitting changes (assume you are in the mc4 directory): 

$ svn commit -m "fix bug " mc4.cpp

Check status of all the files in mc4 

$ svn status


Build mc4
---------

Double/single precision configuration:

 mc4.cpp
 -------
 #define T double
 // #define T float

 DataSink.h
 ----------
#define DPREC
//#define SPREC

#ifdef DPREC
 #define TT double
#else
 #define TT float
#endif

In case of single precision IPPL must be configured with -DIPPL_USE_SINGLE_PRECISION 
and the macro can be set in configure.ac.

mkdir -p config 
aclocal --force
libtoolize --force --copy
automake --force --add-missing --copy
autoheader --force
autoconf --force
autoreconf

./configure --with-ippl-includedir=/home2/adelmann/svnwork/ippl/src --with-ippl-libdir=/home2/adelmann/svnwork/ippl/lib/LINUX \
--with-h5part-includedir=/home2/adelmann/svnwork/H5Part/src --with-h5part-libdir=/home2/adelmann/svnwork/H5Part/src \
--with-hdf5-includedir=/opt/hdf5/hdf5-1.6.7/include --with-hdf5-ibdir=/opt/hdf5/hdf5-1.6.7/lib \
--with-libs="-lz -lm  CXX=mpicxx --no-create --no-recursion"


Build pow a utility to compute P(k)
-----------------------------------

$ cd $IPPL_ROOT/projects/mc4/Power
$ make  


Running mc4 and compare results with MC2
----------------------------------------

In mc4-tests in test-1 there is the canonical testcase with mc2.

In order to run on Coyote ou HAVE to copy the file to the scratch file system i.e. /scratch3.



On Franklin.nersc.ch
--------------------

Have to add this to the generated makefile

-lpH5Part -lhdf5 -lippl -lz

